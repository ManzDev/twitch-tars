!function(){const n=document.createElement("link").relList;if(!(n&&n.supports&&n.supports("modulepreload"))){for(const n of document.querySelectorAll('link[rel="modulepreload"]'))e(n);new MutationObserver((n=>{for(const t of n)if("childList"===t.type)for(const n of t.addedNodes)"LINK"===n.tagName&&"modulepreload"===n.rel&&e(n)})).observe(document,{childList:!0,subtree:!0})}function e(n){if(n.ep)return;n.ep=!0;const e=function(n){const e={};return n.integrity&&(e.integrity=n.integrity),n.referrerpolicy&&(e.referrerPolicy=n.referrerpolicy),"use-credentials"===n.crossorigin?e.credentials="include":"anonymous"===n.crossorigin?e.credentials="omit":e.credentials="same-origin",e}(n);fetch(n.href,e)}}();class n extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n      :host {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n      }\n\n      .end {\n        display: grid;\n        grid-template-columns: repeat(4, 1fr);\n        grid-template-rows: repeat(3, 1fr);\n        width: 100%;\n        height: 22%;\n      }\n\n      .end > div {\n        border: 1px solid #333;\n        border-top: 1px solid #aaa;\n      }\n\n      .separator {\n        display: grid;\n        grid-template-columns: repeat(4, 1fr);\n        height: 8%;\n      }\n\n      .separator .block {\n        display: grid;\n        grid-template-columns: repeat(4, 1fr);\n      }\n\n      .separator .block > div {\n        border: 1px solid #333;\n        border-top: 1px solid #aaa;\n        border-bottom: 1px solid #aaa;\n      }\n\n      .center {\n        display: grid;\n        grid-template-rows: 1fr 1fr;\n        height: 50%;\n      }\n\n      .center .block {\n        display: grid;\n        width: 100%;\n        grid-template-columns: repeat(4, 1fr);\n        grid-template-rows: 1fr;\n      }\n\n      .center .block > div {\n        border: 1px solid #333;\n      }\n    "}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML=`\n    <style>${n.styles}</style>\n    <div class="end">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n    <div class="separator">\n      <div class="block">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <div class="block">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <div class="block">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <div class="block">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n    <div class="center">\n      <div class="block">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <div class="block">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n    <div class="separator">\n      <div class="block">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <div class="block">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <div class="block">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n      <div class="block">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n    <div class="end">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n    `}}customElements.define("tars-face-legs",n);class e extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return'\n      :host {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n      }\n\n      .end {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        width: 100%;\n        height: 20%;\n      }\n\n      .end > div {\n        border: 1px solid #333;\n      }\n\n      .black {\n        background: #000;\n        width: 100%;\n        height: 20%;\n      }\n\n      .black.screen {\n        color: #1BE820;\n        font-size: 2px;\n        white-space: pre;\n      }\n\n      .black.screen::before {\n        content: "";\n        width: 100%;\n        height: 20%;\n        display: block;\n        background: #2225;\n      }\n\n      .text {\n        font-family: Ramabhadra;\n        font-weight: bold;\n        font-size: 40px;\n        color: #b87333b4;\n        text-shadow: 0 0 4px #48320B;\n        transform-origin: 0 0;\n        transform: rotate(-90deg);\n        position: absolute;\n        bottom: -16px;\n        left: 7px;\n        line-height: 75%;\n      }\n\n      .dots {\n        letter-spacing: -5px;\n      }\n\n      .center {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        grid-template-rows: 1fr 1fr;\n        height: 65%;\n      }\n\n      .center > div {\n        border: 1px solid #333;\n        position: relative;\n      }\n    '}getTerminalText(){return'\n      Welcome to TARS Corporation (TM) Terminal\n      Copyright (C) 2984-2987, TARS Corp. Software\n      OS version: 22A1-9166-69\n\n      Initializing...\n      ==================================\n\n      Memory Test: 281474976710656B OK\n\n      Auto-Detecting modules ... TARS "H@CK-MODULE" found!\n\n      Searching for devices nearby...\n      ==================================\n\n      Please choose an option:\n\n       (1) "Stellar Coffee"\n       (2) "Hack the box with S4vitaar"\n       (3) "CSS with ManzDev"\n\n       What is your choice: _'}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML=`\n    <style>${e.styles}</style>\n    <div class="end">\n      <div></div>\n      <div></div>\n    </div>\n    <div class="black screen">\n      ${this.getTerminalText()}\n    </div>\n    <div class="center">\n      <div>\n        <div class="text">TARS</div>\n      </div>\n      <div>\n        <div class="text dots">⠞⠁⠗⠎</div>\n      </div>\n      <div></div>\n      <div></div>\n    </div>\n    <div class="black">\n    </div>\n    <div class="end">\n      <div></div>\n      <div></div>\n    </div>\n    `}}customElements.define("tars-face-main",e);const t=["Not enought memory","The cake is a lie!","File not found","sudo command not found","setting humor level to 60%","internal error: 418 I'm a teapot","ERROR 404: CSS not found","Kernel panic","Insert your windows installation disc and restart your computer","A problem has been detected and windows has been shut down to prevent damage to your computer","PEBKAC found!!!","Killing humans... Please wait...","H4cker not detected","`rm` deprecated","SQL inyected. Permission granted"];class i extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return'\n      :host {\n        display: flex;\n        flex-direction: column;\n        height: 100%;\n      }\n\n      .end {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        width: 100%;\n        height: 20%;\n      }\n\n      .end > div {\n        border: 1px solid #333;\n      }\n\n      .black {\n        background: #000;\n        width: 100%;\n        height: 20%;\n      }\n\n      .black.screen {\n        display: flex;\n        flex-direction: column;\n        justify-content: flex-end;\n        color: #1ba7e8;\n        font-size: 2px;\n        overflow: hidden;\n        position: relative;\n      }\n\n      .black.screen .content {\n        margin: 10px;\n      }\n\n      .black.screen .content::before {\n        content: "";\n        width: 100%;\n        height: 10px;\n        display: block;\n        background: #000;\n        position: absolute;\n        top: 0;\n      }\n\n      .black.screen::after {\n        content: "";\n        width: 100%;\n        height: 20%;\n        display: block;\n        background: #4445;\n        position: absolute;\n        top: 0;\n        z-index: 5;\n      }\n\n      .text {\n        font-family: Ramabhadra;\n        font-weight: bold;\n        font-size: 40px;\n        color: #b87333da;\n        text-shadow: 0 0 4px #48320B;\n        transform-origin: 0 0;\n        transform: rotate(-90deg);\n        position: absolute;\n        bottom: -16px;\n        left: 8px;\n        line-height: 75%;\n      }\n\n      .center {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        grid-template-rows: 1fr 1fr;\n        height: 65%;\n      }\n\n      .center > div {\n        border: 1px solid #333;\n        position: relative;\n      }\n    '}connectedCallback(){this.render(),this.screen=this.shadowRoot.querySelector(".black.screen .content"),setTimeout((()=>this.generateFakeLogs()),50+~~(750*Math.random()))}generateFakeLogs(){const n=`[${~~(24*Math.random())}:${~~(60*Math.random())}] ${t[~~(Math.random()*t.length)]}<br>`;this.screen.innerHTML+=n;const e=50+~~(500*Math.random());setTimeout((()=>this.generateFakeLogs()),e)}render(){this.shadowRoot.innerHTML=`\n    <style>${i.styles}</style>\n    <div class="end">\n      <div></div>\n      <div></div>\n    </div>\n    <div class="black screen">\n      <div class="content">\n      </div>\n    </div>\n    <div class="center">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n    <div class="black">\n    </div>\n    <div class="end">\n      <div></div>\n      <div></div>\n    </div>\n    `}}customElements.define("tars-face-side",i);class d extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return'\n      :host {\n        --width: 100px;\n        --height: var(--width);\n        --offset: 600px;\n\n        width: var(--width);\n        height: var(--height);\n        display: block;\n        position: relative;\n        perspective: 8000px;\n        transform-style: preserve-3d;\n        /* transform: rotateX(15deg) rotateY(15deg); */\n      }\n\n      .face-1, .face-2, .face-5, .face-6 {\n        --height: var(--offset);\n      }\n\n      .face {\n        width: var(--width);\n        height: var(--height);\n        position: absolute;\n      }\n\n      /* right face */\n      .face-1 {\n        transform-origin: 100% 0%;\n        transform: rotateY(-90deg);\n        background: #2C2B29;\n      }\n\n      /* left face */\n      .face-2 {\n        transform-origin: 0% 0%;\n        transform: rotateY(90deg);\n        background: #2C2B29;\n      }\n\n      /* bottom face */\n      .face-3 {\n        transform-origin: 100% 100%;\n        transform: translateY(calc(var(--offset) - var(--width))) rotateX(90deg);\n        background: #272727;\n      }\n\n      /* top face */\n      .face-4 {\n        transform-origin: 100% 0;\n        transform: rotateX(-90deg);\n        background: #aaa;\n      }\n\n      /* front face */\n      .face-5 {\n        background: #504C4B;\n      }\n\n      /* back face */\n      .face-6 {\n        transform: translateZ(calc(var(--width) * -1));\n        transform-origin: 100% 100%;\n        background: #444;\n      }\n\n      .face-1::after,\n      .face-2::after,\n      .face-5::after,\n      .face-6::after {\n        content: "";\n        display: block;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(to bottom, #fff3, #0003);\n        position: absolute;\n        top: 0;\n      }\n    '}connectedCallback(){var n;this.type=null!=(n=this.getAttribute("type"))?n:"legs",this.render()}getFace(){return{legs:"<tars-face-legs></tars-face-legs>",main:"<tars-face-main></tars-face-main>",side:"<tars-face-side></tars-face-side>"}[this.type]}render(){this.shadowRoot.innerHTML=`\n    <style>${d.styles}</style>\n    <div class="face face-1"></div>\n    <div class="face face-2"></div>\n    <div class="face face-3 bottom"></div>\n    <div class="face face-4 top"></div>\n    <div class="face face-5 front">${this.getFace()}</div>\n    <div class="face face-6"></div>\n    `}}customElements.define("tars-block",d);class a extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}static get styles(){return"\n      .tars {\n        width: 400px;\n        display: flex;\n        justify-content: center;\n        transform: rotateY(20deg);\n        transform-style: preserve-3d;\n        perspective: 8000px;\n        gap: 4px;\n      }\n\n      tars-block {\n        height: 600px;\n      }\n\n      tars-block:nth-child(1) { z-index: 4; }\n      tars-block:nth-child(2) { z-index: 3; }\n      tars-block:nth-child(3) { z-index: 2; }\n      tars-block:nth-child(4) { z-index: 1; }\n\n      /* Walk animation */\n      :host(.walk) tars-block {\n        transform-origin: 100% 50%;\n        animation: walk 1s cubic-bezier(0.6, 0, 0.4, 1) infinite alternate;\n      }\n\n      :host(.walk) tars-block:nth-child(2),\n      :host(.walk) tars-block:nth-child(3) {\n        animation-direction: alternate-reverse;\n      }\n\n      @keyframes walk {\n        0% { transform: rotateX(15deg); }\n        100% { transform: rotateX(-15deg); }\n      }\n\n      /* Run animation */\n      :host(.run) tars-block {\n        transform-origin: 100% 20%;\n        animation: run 2s ease-in-out infinite alternate;\n      }\n\n      :host(.run) tars-block:nth-child(1) {\n        animation-delay: 0.5s;\n      }\n\n      :host(.run) tars-block:nth-child(2) {\n        animation-delay: 1s;\n      }\n\n      :host(.run) tars-block:nth-child(3) {\n        animation-delay: 1.5s;\n      }\n\n      :host(.run) tars-block:nth-child(4) {\n        animation-delay: 2s;\n      }\n\n      @keyframes run {\n        0%, 100% { transform: rotateX(0); }\n        33% { transform: rotateX(15deg); }\n        66% { transform: rotateX(-15deg); }\n      }\n\n      /* Spin Animation */\n      :host(.spin) .tars {\n        animation: spin 5s linear infinite;\n      }\n\n      @keyframes spin {\n        0% { transform: rotateY(0); }\n        100% { transform: rotateY(360deg);}\n      }\n    "}connectedCallback(){this.render()}render(){this.shadowRoot.innerHTML=`\n    <style>${a.styles}</style>\n    <div class="tars">\n      <tars-block class="block-1" type="legs"></tars-block>\n      <tars-block class="block-2" type="main"></tars-block>\n      <tars-block class="block-3" type="side"></tars-block>\n      <tars-block class="block-4" type="legs"></tars-block>\n    </div>`}}customElements.define("tars-robot",a);const r=document.querySelector("tars-robot"),[s,o,c]=document.querySelectorAll("button");s.addEventListener("click",(()=>r.classList.toggle("spin"))),o.addEventListener("click",(()=>r.classList.toggle("walk"))),c.addEventListener("click",(()=>r.classList.toggle("run")));
